name: Publish Docker image from main

permissions:
  contents: read
  packages: write
  id-token: write

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: extract_version
        run: |
          # Fetch all tags
          git fetch --tags
          # Attempt to get the latest tag in the repository
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [[ -z "$latest_tag" ]]; then
            # Error out if no tags are found
            echo "No tags found in the repository"
            exit 1
          else
            VERSION=$latest_tag
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/ingsismege/testmanager:latest
            ghcr.io/ingsismege/testmanager:${{ env.VERSION }}

      - name: Update prod server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ${{ secrets.USER_PROD }}
          key: ${{ secrets.KEY_PROD }}
          script: |
            cd INFRAingsis/prod/
            docker compose -f docker-compose.prod.yml stop printscriptApi
            docker compose -f docker-compose.prod.yml pull printscriptApi
            docker compose -f docker-compose.prod.yml up printscriptApi -d --build